{
	"info": {
		"_postman_id": "ea0d0edd-6c5d-4ac8-b7cc-744d5422d7b7",
		"name": "Kafka Connect",
		"description": "A postman collection to interact whith kafka Connect\n\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Connectors",
			"item": [
				{
					"name": "List All Connectors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors"
							]
						},
						"description": "# GET /connectors\r\n\r\nGet a list of active connectors\r\n\r\n# Response JSON Object:\r\n * **connectors** (_array_) – List of connector names\r\n\r\n[Official Documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connectors)"
					},
					"response": []
				},
				{
					"name": "Connector Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/status",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"status"
							]
						},
						"description": "# GET /connectors/(string: name)/status\r\n\r\nGet current status of the connector, including whether it is running, failed or paused, which worker it is assigned to, error information if it has failed, and the state of all its tasks.\r\n\r\n# Response JSON Object:\r\n* **name** (_string_) – The name of the connector.\r\n* **connector** (_map_) – The map containing connector status.\r\n* **tasks[i]** (_map_) – The map containing the task status.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connectors-(string-name)-status)"
					},
					"response": []
				},
				{
					"name": "Get connector information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}"
							]
						},
						"description": "# GET /connectors/(string: name)\n\nGet information about the connector.\n\n# Response JSON Object:\n* **name** (_string_) – Name of the created connector\n* **config** (_map_) – Configuration parameters for the connector.\n* **tasks** (_array_) – List of active tasks generated by the connector\n* **tasks[i].connector** (_string_) – The name of the connector the task belongs to\n* **tasks[i].task** (_int_) – Task ID within the connector.\n    \n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connectors-(string-name))"
					},
					"response": []
				},
				{
					"name": "Connector config",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/config",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"config"
							]
						},
						"description": "# GET /connectors/(string: name)/config\r\n\r\nGet the configuration for the connector.\r\n\r\n# Response JSON Object:\r\n* **config** (_map_) – Configuration parameters for the connector.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connectors-(string-name)-config)"
					},
					"response": [
						{
							"name": "Connector config",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/config",
									"protocol": "http",
									"host": [
										"{{KAFKA_CONNECT_ENDPOINT}}"
									],
									"path": [
										"connectors",
										"{{KAFKA_CONNECT_CONNECTOR}}",
										"config"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"connector.class\": \"io.confluent.connect.hdfs.HdfsSinkConnector\",\r\n    \"tasks.max\": \"10\",\r\n    \"topics\": \"test-topic\",\r\n    \"hdfs.url\": \"hdfs://fakehost:9000\",\r\n    \"hadoop.conf.dir\": \"/opt/hadoop/conf\",\r\n    \"hadoop.home\": \"/opt/hadoop\",\r\n    \"flush.size\": \"100\",\r\n    \"rotate.interval.ms\": \"1000\"\r\n}"
						}
					]
				},
				{
					"name": "Set Connector Config",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/config",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"config"
							]
						},
						"description": "# PUT /connectors/(string: name)/config\r\n\r\nCreate a new connector using the given configuration, or update the configuration for an existing connector. Returns information about the connector after the change has been made. Return 409 (Conflict) if rebalance is in process.\r\n\r\n# Request JSON Object:\r\n* **config** (_map_) – Configuration parameters for the connector. All values should be strings.\r\n\r\n# Response JSON Object:\r\n* **name** (_string_) – Name of the created connector\r\n* **config** (_map_) – Configuration parameters for the connector.\r\n* **tasks** (_array_) – List of active tasks generated by the connector\r\n* **tasks[i].connector** (_string_) – The name of the connector the task belongs to\r\n* **tasks[i].task** (_int_) – Task ID within the connector.\r\n\r\n[Offical documentation](https://docs.confluent.io/current/connect/references/restapi.html#put--connectors-(string-name)-config)"
					},
					"response": [
						{
							"name": "Replace Connector",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/config",
									"protocol": "http",
									"host": [
										"{{KAFKA_CONNECT_ENDPOINT}}"
									],
									"path": [
										"connectors",
										"{{KAFKA_CONNECT_CONNECTOR}}",
										"config"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "{\r\n    \"connector.class\": \"io.confluent.connect.hdfs.HdfsSinkConnector\",\r\n    \"tasks.max\": \"10\",\r\n    \"topics\": \"test-topic\",\r\n    \"hdfs.url\": \"hdfs://fakehost:9000\",\r\n    \"hadoop.conf.dir\": \"/opt/hadoop/conf\",\r\n    \"hadoop.home\": \"/opt/hadoop\",\r\n    \"flush.size\": \"100\",\r\n    \"rotate.interval.ms\": \"1000\"\r\n}"
						}
					]
				},
				{
					"name": "Post Connectors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors"
							]
						},
						"description": "# POST /connectors\r\n\r\nCreate a new connector, returning the current connector info if successful. Return 409 (Conflict) if rebalance is in process.\r\n\r\n# Request JSON Object:\r\n* **name** (_string_) – Name of the connector to create\r\n* **config** (_map_) – Configuration parameters for the connector. All values should be strings.\r\n\r\n# Response JSON Object:\r\n* **name** (_string_) – Name of the created connector\r\n* **config** (_map_) – Configuration parameters for the connector.\r\n* **tasks** (_array_) – List of active tasks generated by the connector\r\n* **tasks[i].connector** (_string_) – The name of the connector the task belongs to\r\n* **tasks[i].task** (_int_) – Task ID within the connector.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#post--connectors)"
					},
					"response": [
						{
							"name": "Post Connectors",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors",
									"protocol": "http",
									"host": [
										"{{KAFKA_CONNECT_ENDPOINT}}"
									],
									"path": [
										"connectors"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 27 Jan 2020 12:49:03 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "459"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.20.v20190813)"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"name\": \"hdfs-sink-connector\",\r\n    \"config\": {\r\n        \"connector.class\": \"io.confluent.connect.hdfs.HdfsSinkConnector\",\r\n        \"tasks.max\": \"10\",\r\n        \"topics\": \"test-topic\",\r\n        \"hdfs.url\": \"hdfs://fakehost:9000\",\r\n        \"hadoop.conf.dir\": \"/opt/hadoop/conf\",\r\n        \"hadoop.home\": \"/opt/hadoop\",\r\n        \"flush.size\": \"100\",\r\n        \"rotate.interval.ms\": \"1000\"\r\n    }\r\n}"
						}
					]
				},
				{
					"name": "Restart Connector KO",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/restart",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"restart"
							]
						},
						"description": "# POST /connectors/(string: name)/restart\r\n\r\nRestart the connector and its tasks. Return 409 (Conflict) if rebalance is in process.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#post--connectors-(string-name)-restart)"
					},
					"response": []
				},
				{
					"name": "Pause Connector",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/pause",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"pause"
							]
						},
						"description": "# PUT /connectors/(string: name)/pause\r\n\r\nPause the connector and its tasks, which stops message processing until the connector is resumed. This call asynchronous and the tasks will not transition to PAUSED state at the same time.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#put--connectors-(string-name)-pause)"
					},
					"response": []
				},
				{
					"name": "Resume Connector",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/resume",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"resume"
							]
						},
						"description": "# PUT /connectors/(string: name)/pause\r\n\r\nPause the connector and its tasks, which stops message processing until the connector is resumed. This call asynchronous and the tasks will not transition to PAUSED state at the same time.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#put--connectors-(string-name)-resume)"
					},
					"response": []
				},
				{
					"name": "Delete Connector",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								""
							]
						},
						"description": "# DELETE /connectors/(string: name)/\r\n\r\nDelete a connector, halting all tasks and deleting its configuration. Return 409 (Conflict) if rebalance is in process.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#delete--connectors-(string-name)-)"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b138cb21-4468-4bbc-a1d5-abbccccfe06d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ef14ce50-cef0-4db7-ae8c-8beca7ef6382",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "List Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/tasks",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"tasks"
							]
						},
						"description": "# GET /connectors/(string: name)/tasks\r\n\r\nGet a list of tasks currently running for the connector.\r\n\r\n# Response JSON Object:\r\n* **tasks** (_array_) – List of active task configs that have been created by the connector\r\n* **tasks[i].id** (_string_) – The ID of task\r\n* **tasks[i].id.connector** (_string_) – The name of the connector the task belongs to\r\n* **tasks[i].id.task** (_int_) – Task ID within the connector.\r\n* **tasks[i].config** (_map_) – Configuration parameters for the task\r\n \r\n\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connectors-(string-name)-tasks)"
					},
					"response": [
						{
							"name": "List Tasks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/tasks",
									"protocol": "http",
									"host": [
										"{{KAFKA_CONNECT_ENDPOINT}}"
									],
									"path": [
										"connectors",
										"{{KAFKA_CONNECT_CONNECTOR}}",
										"tasks"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Task Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/tasks/0/status",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"tasks",
								"0",
								"status"
							]
						},
						"description": "# GET /connectors/(_string: name_)/tasks/(_int: taskid_)/status\r\n\r\nGet a task’s status.\r\n\r\n\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connectors-(string-name)-tasks-(int-taskid)-status)"
					},
					"response": []
				},
				{
					"name": "Restart Task",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connectors/{{KAFKA_CONNECT_CONNECTOR}}/tasks/0/restart",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connectors",
								"{{KAFKA_CONNECT_CONNECTOR}}",
								"tasks",
								"0",
								"restart"
							]
						},
						"description": "# POST /connectors/(_string: name_)/tasks/(_int: taskid_)/restart\r\n\r\nRestart an individual task."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c1c99bab-039c-4ae9-aad0-16d3321f4b12",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ccd66c15-60bb-434e-99a9-910c8e241cc2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Connector Plugins",
			"item": [
				{
					"name": "List Connector Plugins",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connector-plugins/",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connector-plugins",
								""
							]
						},
						"description": "# GET /connector-plugins/\r\n\r\nReturn a list of connector plugins installed in the Kafka Connect cluster. Note that the API only checks for connectors on the worker that handles the request, which means it is possible to see inconsistent results, especially during a rolling upgrade if you add new connector jars.\r\n\r\n# Response JSON Object:\r\n* **class** (_string_) – The connector class name.\r\n\r\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#get--connector-plugins-)"
					},
					"response": [
						{
							"name": "List Connector Plugins",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connector-plugins/",
									"protocol": "http",
									"host": [
										"{{KAFKA_CONNECT_ENDPOINT}}"
									],
									"path": [
										"connector-plugins",
										""
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"class\": \"io.confluent.connect.hdfs.HdfsSinkConnector\"\r\n    },\r\n    {\r\n        \"class\": \"io.confluent.connect.jdbc.JdbcSourceConnector\"\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Validate Connectors Plugins Configuration",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"connector.class\": \"org.apache.kafka.connect.file.FileStreamSinkConnector\",\r\n    \"tasks.max\": \"1\",\r\n    \"topics\": \"test-topic\"\r\n}"
						},
						"url": {
							"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connector-plugins/FileStreamSinkConnector/config/validate",
							"protocol": "http",
							"host": [
								"{{KAFKA_CONNECT_ENDPOINT}}"
							],
							"path": [
								"connector-plugins",
								"FileStreamSinkConnector",
								"config",
								"validate"
							]
						},
						"description": "# PUT /connector-plugins/(_string: name_)/config/validate \nValidate the provided configuration values against the configuration definition. This API performs per config validation, returns suggested values and error messages during validation.\n\n# Request JSON Object:\n\n* **config** (_map_) – Configuration parameters for the connector. All values should be strings.\n\n# Response JSON Object:\n\n* **name** (_string_) – The class name of the connector plugin.\n* **error_count** (_int_) – The total number of errors encountered during configuration validation.\n* **groups** (_array_) – The list of groups used in configuration definitions.\n* **configs[i].definition** (_map_) – The definition for a config in the connector plugin, which includes the name, type, importance, etc.\n* **configs[i].value** (_map_) – The current value for a config, which includes the name, value, recommended values, etc.\n)\n\n\n\n[Official documentation](https://docs.confluent.io/current/connect/references/restapi.html#put--connector-plugins-(string-name)-config-validate)"
					},
					"response": [
						{
							"name": "Validate configuration for FileStreamSinkConnector Plugin",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"connector.class\": \"org.apache.kafka.connect.file.FileStreamSinkConnector\",\r\n    \"tasks.max\": \"1\",\r\n    \"topics\": \"test-topic\"\r\n}"
								},
								"url": {
									"raw": "http://{{KAFKA_CONNECT_ENDPOINT}}/connector-plugins/FileStreamSinkConnector/config/validate",
									"protocol": "http",
									"host": [
										"{{KAFKA_CONNECT_ENDPOINT}}"
									],
									"path": [
										"connector-plugins",
										"FileStreamSinkConnector",
										"config",
										"validate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 27 Jan 2020 13:28:00 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Server",
									"value": "Jetty(9.4.20.v20190813)"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"name\": \"FileStreamSinkConnector\",\r\n    \"error_count\": 1,\r\n    \"groups\": [\r\n        \"Common\"\r\n    ],\r\n    \"configs\": [\r\n        {\r\n            \"definition\": {\r\n                \"name\": \"topics\",\r\n                \"type\": \"LIST\",\r\n                \"required\": false,\r\n                \"default_value\": \"\",\r\n                \"importance\": \"HIGH\",\r\n                \"documentation\": \"\",\r\n                \"group\": \"Common\",\r\n                \"width\": \"LONG\",\r\n                \"display_name\": \"Topics\",\r\n                \"dependents\": [],\r\n                \"order\": 4\r\n        },\r\n            \"value\": {\r\n                \"name\": \"topics\",\r\n                \"value\": \"test-topic\",\r\n                \"recommended_values\": [],\r\n                \"errors\": [],\r\n                \"visible\": true\r\n            }\r\n        },\r\n        {\r\n            \"definition\": {\r\n                \"name\": \"file\",\r\n                \"type\": \"STRING\",\r\n                \"required\": true,\r\n                \"default_value\": \"\",\r\n                \"importance\": \"HIGH\",\r\n                \"documentation\": \"Destination filename.\",\r\n                \"group\": null,\r\n                \"width\": \"NONE\",\r\n                \"display_name\": \"file\",\r\n                \"dependents\": [],\r\n                \"order\": -1\r\n            },\r\n            \"value\": {\r\n                \"name\": \"file\",\r\n                \"value\": null,\r\n                \"recommended_values\": [],\r\n                \"errors\": [\r\n                    \"Missing required configuration \\\"file\\\" which has no default value.\"\r\n                ],\r\n                \"visible\": true\r\n            }\r\n        },\r\n        {\r\n            \"definition\": {\r\n                \"name\": \"name\",\r\n                \"type\": \"STRING\",\r\n                \"required\": true,\r\n                \"default_value\": \"\",\r\n                \"importance\": \"HIGH\",\r\n                \"documentation\": \"Globally unique name to use for this connector.\",\r\n                \"group\": \"Common\",\r\n                \"width\": \"MEDIUM\",\r\n                \"display_name\": \"Connector name\",\r\n                \"dependents\": [],\r\n                \"order\": 1\r\n            },\r\n            \"value\": {\r\n                \"name\": \"name\",\r\n                \"value\": \"test\",\r\n                \"recommended_values\": [],\r\n                \"errors\": [],\r\n                \"visible\": true\r\n            }\r\n        },\r\n        {\r\n            \"definition\": {\r\n                \"name\": \"tasks.max\",\r\n                \"type\": \"INT\",\r\n                \"required\": false,\r\n                \"default_value\": \"1\",\r\n                \"importance\": \"HIGH\",\r\n                \"documentation\": \"Maximum number of tasks to use for this connector.\",\r\n                \"group\": \"Common\",\r\n                \"width\": \"SHORT\",\r\n                \"display_name\": \"Tasks max\",\r\n                \"dependents\": [],\r\n                \"order\": 3\r\n        },\r\n            \"value\": {\r\n                \"name\": \"tasks.max\",\r\n                \"value\": \"1\",\r\n                \"recommended_values\": [],\r\n                \"errors\": [],\r\n                \"visible\": true\r\n            }\r\n        },\r\n        {\r\n            \"definition\": {\r\n                \"name\": \"connector.class\",\r\n                \"type\": \"STRING\",\r\n                \"required\": true,\r\n                \"default_value\": \"\",\r\n                \"importance\": \"HIGH\",\r\n                \"documentation\": \"Name or alias of the class for this connector. Must be a subclass of org.apache.kafka.connect.connector.Connector. If the connector is org.apache.kafka.connect.file.FileStreamSinkConnector, you can either specify this full name,  or use \\\"FileStreamSink\\\" or \\\"FileStreamSinkConnector\\\" to make the configuration a bit shorter\",\r\n                \"group\": \"Common\",\r\n                \"width\": \"LONG\",\r\n                \"display_name\": \"Connector class\",\r\n                \"dependents\": [],\r\n                \"order\": 2\r\n            },\r\n            \"value\": {\r\n                \"name\": \"connector.class\",\r\n                \"value\": \"org.apache.kafka.connect.file.FileStreamSinkConnector\",\r\n                \"recommended_values\": [],\r\n                \"errors\": [],\r\n                \"visible\": true\r\n            }\r\n        }\r\n    ]\r\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "baeb8df1-d359-4d80-80cc-71cff41967e1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "d6ed480c-324c-4247-9931-c313e6349a3f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2fd82567-e2b0-42a0-89df-708ae0564a67",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "05d2e246-620d-491d-bb3a-b42f6f486c26",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}